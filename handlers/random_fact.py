# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
import logging
# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ python-telegram-bot
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤
from services.openai_client import get_random_fact

# –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–æ–¥—É–ª—è
logger = logging.getLogger(__name__)


async def random_fact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /random_fact"""
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–∫—Ç–∞
        loading_msg = await update.message.reply_text("üé≤ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç... ‚è≥")
        # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç —á–µ—Ä–µ–∑ API
        fact = await get_random_fact()

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = [
            [InlineKeyboardButton("üé≤ –•–æ—á—É –µ—â—ë —Ñ–∞–∫—Ç", callback_data="random_more")],
            [InlineKeyboardButton("üè† –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="random_finish")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –ó–∞–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ñ–∞–∫—Ç
        await loading_msg.edit_text(
            f"üß† <b>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</b>\n\n{fact}",
            parse_mode='HTML',  # –†–∞–∑—Ä–µ—à–∞–µ–º HTML-—Ä–∞–∑–º–µ—Ç–∫—É
            reply_markup=reply_markup  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        )

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–∫—Ç–∞: {e}")
        await update.message.reply_text(
            "ü§î –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!"
        )


async def random_fact_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–∫—Ç–∞–º–∏"""
    query = update.callback_query
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ callback

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–•–æ—á—É –µ—â—ë —Ñ–∞–∫—Ç"
    if query.data == "random_more":
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            await query.edit_message_text("üé≤ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–π —Ñ–∞–∫—Ç... ‚è≥")
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–∫—Ç
            fact = await get_random_fact()

            # –°–æ–∑–¥–∞–µ–º —Ç–µ –∂–µ –∫–Ω–æ–ø–∫–∏
            keyboard = [
                [InlineKeyboardButton("üé≤ –•–æ—á—É –µ—â—ë —Ñ–∞–∫—Ç", callback_data="random_more")],
                [InlineKeyboardButton("üè† –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="random_finish")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Ñ–∞–∫—Ç–æ–º
            await query.edit_message_text(
                f"üß† <b>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</b>\n\n{fact}",
                parse_mode='HTML',
                reply_markup=reply_markup
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Ñ–∞–∫—Ç–∞: {e}")
            await query.edit_message_text(
                "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é."
            )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–æ–Ω—á–∏—Ç—å"
    elif query.data == "random_finish":
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        keyboard = [
            [InlineKeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç", callback_data="random_fact")],
            [InlineKeyboardButton("ü§ñ ChatGPT (—Å–∫–æ—Ä–æ)", callback_data="gpt_coming_soon")],
            [InlineKeyboardButton("üë• –î–∏–∞–ª–æ–≥ —Å –ª–∏—á–Ω–æ—Å—Ç—å—é (—Å–∫–æ—Ä–æ)", callback_data="talk_coming_soon")],
            [InlineKeyboardButton("üß† –ö–≤–∏–∑ (—Å–∫–æ—Ä–æ)", callback_data="quiz_coming_soon")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await query.edit_message_text(
            "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatGPT –±–æ—Ç–∞!</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:",
            parse_mode='HTML',
            reply_markup=reply_markup
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç" –∏–∑ –º–µ–Ω—é
    elif query.data == "random_fact":
        try:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
            await query.edit_message_text("üé≤ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç... ‚è≥")
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–∫—Ç
            fact = await get_random_fact()

            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            keyboard = [
                [InlineKeyboardButton("üé≤ –•–æ—á—É –µ—â—ë —Ñ–∞–∫—Ç", callback_data="random_more")],
                [InlineKeyboardButton("üè† –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="random_finish")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ñ–∞–∫—Ç
            await query.edit_message_text(
                f"üß† <b>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</b>\n\n{fact}",
                parse_mode='HTML',
                reply_markup=reply_markup
            )

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–∫—Ç–∞ –∏–∑ –º–µ–Ω—é: {e}")
            await query.edit_message_text(
                "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é."
            )