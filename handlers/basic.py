"""–§–∞–π–ª —Å —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏ –±–æ—Ç–∞."""
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start."""
    keyboard = [
        # –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ - —ç—Ç–æ —Ä—è–¥ –∫–Ω–æ–ø–æ–∫
        [InlineKeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç", callback_data="random_fact")],
        [InlineKeyboardButton("ü§ñ ChatGPT", callback_data="gpt_interface")],
        [InlineKeyboardButton("üí¨ –î–∏–∞–ª–æ–≥ —Å –ª–∏—á–Ω–æ—Å—Ç—å—é", callback_data="talk_interface")],
        [InlineKeyboardButton("‚ùì –ö–≤–∏–∑", callback_data="quiz_interface")],
        [InlineKeyboardButton("üåç –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", callback_data="translate")],
        [InlineKeyboardButton("üé≠ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", callback_data="recommend_interface")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    welcome_text = (
        "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatGPT –±–æ—Ç–∞!</b>\n\n"
        "üöÄ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
        "üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç - –ø–æ–ª—É—á–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç\n"
        "ü§ñ ChatGPT - –æ–±—â–µ–Ω–∏–µ —Å –ò–ò\n"
        "üí¨ –î–∏–∞–ª–æ–≥ —Å –ª–∏—á–Ω–æ—Å—Ç—å—é - –≥–æ–≤–æ—Ä–∏ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –ª—é–¥—å–º–∏\n"
        "‚ùì –ö–≤–∏–∑ - –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è\n"
        "üåç –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ - –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —è–∑—ã–∫–∏\n"
        "üé≠ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ - —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ñ–∏–ª—å–º–æ–≤, –∫–Ω–∏–≥ –∏ –º—É–∑—ã–∫–∏\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )

    await update.message.reply_text(
        welcome_text,
        parse_mode='HTML',
        reply_markup=reply_markup
    )


async def menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    query = update.callback_query
    await query.answer()

    if query.data == "recommend_interface":
        from handlers.recommendations import show_categories
        await show_categories(update, context)


async def start_menu_again(query):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = [
        [InlineKeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç", callback_data="random_fact")],
        [InlineKeyboardButton("ü§ñ ChatGPT", callback_data="gpt_interface")],
        [InlineKeyboardButton("üë• –î–∏–∞–ª–æ–≥ —Å –ª–∏—á–Ω–æ—Å—Ç—å—é", callback_data="talk_interface")],
        [InlineKeyboardButton("‚ùì –ö–≤–∏–∑", callback_data="quiz_interface")],
        [InlineKeyboardButton("üåç –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", callback_data="translate")],
        [InlineKeyboardButton("üé≠ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", callback_data="recommend_interface")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatGPT –±–æ—Ç–∞!</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:",
        parse_mode='HTML',
        reply_markup=reply_markup
    )